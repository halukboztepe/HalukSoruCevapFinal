@{
    ViewData["Title"] = "Tüm Cevaplar";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}

<div class="container-fluid">
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Tüm Cevaplar</h1>
    </div>

    <!-- Search -->
    <div class="row mb-4">
        <div class="col-md-8">
            <div class="input-group">
                <input type="text" class="form-control" id="searchInput" placeholder="Cevaplarda ara...">
                <div class="input-group-append">
                    <button class="btn btn-primary" type="button" id="searchBtn">
                        <i class="fas fa-search fa-sm"></i>
                    </button>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <select class="form-control" id="sortSelect">
                <option value="newest">En Yeni</option>
                <option value="oldest">En Eski</option>
            </select>
        </div>
    </div>

    <!-- Answers Table -->
    <div class="card shadow mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Soru</th>
                            <th>Cevap</th>
                            <th>Kullanıcı</th>
                            <th>Tarih</th>
                            <th>İşlemler</th>
                        </tr>
                    </thead>
                    <tbody id="answersList">
                        <tr>
                            <td colspan="5" class="text-center">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="sr-only">Yükleniyor...</span>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <nav aria-label="Page navigation" class="mt-4">
                <ul class="pagination justify-content-center" id="pagination">
                </ul>
            </nav>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            let currentPage = 1;
            let totalPages = 1;

            function updatePagination() {
                const pagination = $('#pagination');
                pagination.empty();

                if (totalPages <= 1) return;

                // Previous button
                pagination.append(`
                    <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                        <a class="page-link" href="#" data-page="${currentPage - 1}">Önceki</a>
                    </li>
                `);

                // Page numbers
                for (let i = 1; i <= totalPages; i++) {
                    pagination.append(`
                        <li class="page-item ${currentPage === i ? 'active' : ''}">
                            <a class="page-link" href="#" data-page="${i}">${i}</a>
                        </li>
                    `);
                }

                // Next button
                pagination.append(`
                    <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                        <a class="page-link" href="#" data-page="${currentPage + 1}">Sonraki</a>
                    </li>
                `);
            }

            function loadAnswers(page = 1) {
                const searchTerm = $('#searchInput').val();
                const sortBy = $('#sortSelect').val();

                $.ajax({
                    url: `${window.config.apiBaseUrl}/admin/answers?searchTerm=${encodeURIComponent(searchTerm)}&sortBy=${sortBy}&page=${page}`,
                    type: 'GET',
                    headers: {
                        'Authorization': `Bearer ${localStorage.getItem('token')}`
                    },
                    success: function(response) {
                        const tbody = $('#answersList');
                        tbody.empty();

                        if (!response.answers || response.answers.length === 0) {
                            tbody.html('<tr><td colspan="5" class="text-center">Henüz hiç cevap bulunmamaktadır.</td></tr>');
                            return;
                        }

                        response.answers.forEach(answer => {
                            const row = `
                                <tr>
                                    <td>
                                        <a href="@Url.Action("QuestionDetail", "Admin")/${answer.questionId}" class="text-primary">
                                            ${answer.questionTitle || 'Silinmiş Soru'}
                                        </a>
                                    </td>
                                    <td>${answer.content}</td>
                                    <td>${answer.userName}</td>
                                    <td>${new Date(answer.createdDate).toLocaleDateString('tr-TR')}</td>
                                    <td>
                                        <button class="btn btn-sm btn-danger delete-answer" data-id="${answer.id}">
                                            <i class="fas fa-ban"></i> İçeriği Engelle
                                        </button>
                                    </td>
                                </tr>
                            `;
                            tbody.append(row);
                        });

                        // Update pagination
                        currentPage = response.currentPage;
                        totalPages = response.totalPages;
                        updatePagination();
                    },
                    error: function(xhr) {
                        if (xhr.status === 401) {
                            window.location.href = '@Url.Action("Login", "Home")';
                        } else {
                            alert('Cevaplar yüklenirken bir hata oluştu.');
                        }
                    }
                });
            }

            // Delete (block) answer
            $(document).on('click', '.delete-answer', function() {
                const answerId = $(this).data('id');
                if (confirm('Bu cevabı engellemek istediğinizden emin misiniz?')) {
                    $.ajax({
                        url: `${window.config.apiBaseUrl}/answer/${answerId}`,
                        type: 'PUT',
                        headers: {
                            'Authorization': `Bearer ${localStorage.getItem('token')}`
                        },
                        contentType: 'application/json',
                        data: JSON.stringify('Alakasız/uygunsuz içerik - Admin tarafından engellendi.'),
                        success: function() {
                            loadAnswers(currentPage); // Reload current page
                        },
                        error: function(xhr) {
                            if (xhr.status === 401) {
                                window.location.href = '@Url.Action("Login", "Home")';
                            } else {
                                alert('Cevap engellenirken bir hata oluştu.');
                            }
                        }
                    });
                }
            });

            // Search button click
            $('#searchBtn').click(function() {
                currentPage = 1;
                loadAnswers(1);
            });

            // Search on enter key
            $('#searchInput').keypress(function(e) {
                if (e.which === 13) {
                    currentPage = 1;
                    loadAnswers(1);
                }
            });

            // Sort change
            $('#sortSelect').change(function() {
                currentPage = 1;
                loadAnswers(1);
            });

            // Pagination click
            $(document).on('click', '.page-link', function(e) {
                e.preventDefault();
                const page = $(this).data('page');
                if (page >= 1 && page <= totalPages) {
                    loadAnswers(page);
                }
            });

            // Initial load
            loadAnswers(1);
        });
    </script>
} 